<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>